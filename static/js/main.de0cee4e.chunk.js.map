{"version":3,"sources":["component/coin.jsx","App.js","reportWebVitals.js","index.js"],"names":["Coin","props","console","log","face","src","App","useState","value","setValue","count","setCount","head","setHead","tail","setTail","onClick","result","Math","floor","random","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"oKAUeA,EARF,SAACC,GAEV,OADAC,QAAQC,IAAIF,GAER,8BACkB,IAAbA,EAAMG,KAAW,qBAAKC,IAAI,0EAAiF,qBAAKA,IAAI,kECwBlHC,EA1BH,WACV,MAAyBC,mBAAS,GAAlC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAuBF,mBAAS,GAAhC,mBAAKG,EAAL,KAAWC,EAAX,KACA,EAAqBJ,mBAAS,GAA9B,mBAAKK,EAAL,KAAUC,EAAV,KACA,EAAqBN,mBAAS,GAA9B,mBAAKO,EAAL,KAAUC,EAAV,KAYA,OACE,gCACE,cAAC,EAAD,CAAMX,KAAMI,IACZ,gCACE,wBAAQQ,QAdG,WACf,IAAIC,EAASC,KAAKC,MAAoB,EAAdD,KAAKE,UAC7BX,EAASQ,GACTN,EAASD,EAAM,GACXO,EAGFJ,EAAQD,EAAK,GAFbG,EAAQD,EAAK,IASX,kBACA,yCAAYJ,EAAZ,SAAyBE,EAAzB,gBAA4CE,EAA5C,uBCbOO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.de0cee4e.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Coin = (props)=>{\r\n    console.log(props)\r\n    return (\r\n        <div>\r\n            {props.face===0 ? <img src=\"https://images-na.ssl-images-amazon.com/images/I/51NyMaKLydL._AC_.jpg\"></img> : <img src=\"https://www.ramint.gov.au/file/401/download?token=SjitG6Pn\"></img>}\r\n        </div>\r\n    )\r\n}\r\nexport default Coin","import React, { useState } from \"react\";\nimport Coin from './component/coin'\n\n\nconst App = ()=>{\n  const [value,setValue] = useState(0)\n  let [count,setCount] = useState(0)\n  let [head,setHead] = useState(0)\n  let [tail,setTail] = useState(0)\n\n  const coinToss = () => {\n    let result = Math.floor(Math.random()*2)\n    setValue(result)\n    setCount(count+1)\n    if(!result){\n      setTail(tail+1)\n    }else{\n      setHead(head+1)\n    }\n  }\n  return (\n    <div>\n      <Coin face={value}></Coin>\n      <div>\n        <button onClick={coinToss}>Toss</button>\n        <h2>out of {count} toss {head} is head and {tail} is tails.</h2>\n      </div>\n    </div>\n)}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  \n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}